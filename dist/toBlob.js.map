{"version":3,"file":"toBlob.js","sourceRoot":"","sources":["../src/toBlob.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAe,MAAM,oBAAoB,CAAC;AAE5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,EACzB,GAAc,EACd,IAAa,EACb,OAAgB,EACD,EAAE;IACjB,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC,GAAG,CAAC,CAAC;IAE9C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI,CAAC;YACH,MAAM,CAAC,MAAM,CACX,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;oBACpB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC;gBACD,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACzC,CAAC,EACD,IAAI,EACJ,OAAO,CACR,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { isDefined, isUndefined } from \"@mjt-engine/object\";\nimport { ImageLike } from \"./ImageLike\";\nimport { toHTMLCanvasElement } from \"./toHTMLCanvasElement\";\n\nexport const toBlob = async (\n  src: ImageLike,\n  type?: string,\n  quality?: number\n): Promise<Blob> => {\n  const canvas = await toHTMLCanvasElement(src);\n\n  return new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob(\n        (blob) => {\n          if (isDefined(blob)) {\n            resolve(blob);\n          }\n          reject(new Error(\"Blob is undefined\"));\n        },\n        type,\n        quality\n      );\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n"]}